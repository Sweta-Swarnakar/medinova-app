{"ast":null,"code":"import axios from \"axios\";\nimport { GET_DOCTOR_FAILURE, GET_DOCTOR_REQ, GET_DOCTOR_SUCCESS, GET_CLICKED_DOCTOR_REQ, GET_CLICKED_DOCTOR_SUCCESS, FILTER_DATA } from \"./ActionType\";\nexport const getDoctorRequest = () => ({\n  type: GET_DOCTOR_REQ\n});\nexport const getDoctorSuccess = payload => ({\n  type: GET_DOCTOR_SUCCESS,\n  payload\n});\nexport const getDoctorFailure = () => ({\n  type: GET_DOCTOR_FAILURE\n});\nexport const filterByCat = payload => ({\n  type: FILTER_DATA,\n  payload\n}); // thunk call to fetch DOCTOR list\n\nexport const getDoctorData = () => {\n  return dispatch => {\n    dispatch(getDoctorRequest());\n    axios.get(\"http://localhost:3000/doctors\").then(res => {\n      dispatch(getDoctorSuccess(res.data));\n    }).catch(() => {\n      dispatch(getDoctorFailure());\n    });\n  };\n};\nexport const getClickedDoctorRequest = () => ({\n  type: GET_CLICKED_DOCTOR_REQ\n});\nexport const getClickedDoctorSuccess = payload => {\n  // console.log(payload.data);\n  return {\n    type: GET_CLICKED_DOCTOR_SUCCESS,\n    payload\n  };\n};\nexport const getClickedDOCTORFailure = () => ({\n  type: GET_DOCTOR_FAILURE\n});\nexport const getClickedDOCTORData = id => {\n  return dispatch => {\n    dispatch(getClickedDOCTORRequest());\n    axios.get(`http://localhost:3000/doctors/${id}`).then(res => {\n      dispatch(getClickedDOCTORSuccess(res.data));\n    }).catch(err => {\n      console.log(err);\n      dispatch(getClickedDOCTORFailure());\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Asus/Desktop/apollo/src/Redux/Action.js"],"names":["axios","GET_DOCTOR_FAILURE","GET_DOCTOR_REQ","GET_DOCTOR_SUCCESS","GET_CLICKED_DOCTOR_REQ","GET_CLICKED_DOCTOR_SUCCESS","FILTER_DATA","getDoctorRequest","type","getDoctorSuccess","payload","getDoctorFailure","filterByCat","getDoctorData","dispatch","get","then","res","data","catch","getClickedDoctorRequest","getClickedDoctorSuccess","getClickedDOCTORFailure","getClickedDOCTORData","id","getClickedDOCTORRequest","getClickedDOCTORSuccess","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA2BC,cAA3B,EAA2CC,kBAA3C,EAAiEC,sBAAjE,EAAyFC,0BAAzF,EAAqHC,WAArH,QAAuI,cAAvI;AAGA,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AACrCC,EAAAA,IAAI,EAAEN;AAD+B,CAAP,CAAzB;AAIP,OAAO,MAAMO,gBAAgB,GAAIC,OAAD,KAAc;AAC5CF,EAAAA,IAAI,EAAEL,kBADsC;AAE5CO,EAAAA;AAF4C,CAAd,CAAzB;AAKP,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AACrCH,EAAAA,IAAI,EAAEP;AAD+B,CAAP,CAAzB;AAIP,OAAO,MAAMW,WAAW,GAAIF,OAAD,KAAc;AACvCF,EAAAA,IAAI,EAAEF,WADiC;AAEvCI,EAAAA;AAFuC,CAAd,CAApB,C,CAKP;;AACA,OAAO,MAAMG,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACAP,IAAAA,KAAK,CACFe,GADH,CACO,+BADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACL,gBAAgB,CAACQ,GAAG,CAACC,IAAL,CAAjB,CAAR;AACD,KAJH,EAKGC,KALH,CAKS,MAAM;AACXL,MAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMS,uBAAuB,GAAG,OAAO;AAC5CZ,EAAAA,IAAI,EAAEJ;AADsC,CAAP,CAAhC;AAGP,OAAO,MAAMiB,uBAAuB,GAAIX,OAAD,IAAa;AAClD;AACA,SAAO;AACLF,IAAAA,IAAI,EAAEH,0BADD;AAELK,IAAAA;AAFK,GAAP;AAID,CANM;AAOP,OAAO,MAAMY,uBAAuB,GAAG,OAAO;AAC5Cd,EAAAA,IAAI,EAAEP;AADsC,CAAP,CAAhC;AAIP,OAAO,MAAMsB,oBAAoB,GAAIC,EAAD,IAAQ;AAC1C,SAAQV,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACW,uBAAuB,EAAxB,CAAR;AACAzB,IAAAA,KAAK,CACFe,GADH,CACQ,iCAAgCS,EAAG,EAD3C,EAEGR,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACY,uBAAuB,CAACT,GAAG,CAACC,IAAL,CAAxB,CAAR;AACD,KAJH,EAKGC,KALH,CAKUQ,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,MAAAA,QAAQ,CAACQ,uBAAuB,EAAxB,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbM","sourcesContent":["import axios from \"axios\";\r\nimport {GET_DOCTOR_FAILURE,GET_DOCTOR_REQ, GET_DOCTOR_SUCCESS,   GET_CLICKED_DOCTOR_REQ, GET_CLICKED_DOCTOR_SUCCESS, FILTER_DATA} from \"./ActionType\";\r\n\r\n\r\nexport const getDoctorRequest = () => ({\r\n  type: GET_DOCTOR_REQ,\r\n});\r\n\r\nexport const getDoctorSuccess = (payload) => ({\r\n  type: GET_DOCTOR_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const getDoctorFailure = () => ({\r\n  type: GET_DOCTOR_FAILURE,\r\n});\r\n\r\nexport const filterByCat = (payload) => ({\r\n  type: FILTER_DATA,\r\n  payload,\r\n});\r\n\r\n// thunk call to fetch DOCTOR list\r\nexport const getDoctorData = () => {\r\n  return (dispatch) => {\r\n    dispatch(getDoctorRequest());\r\n    axios\r\n      .get(\"http://localhost:3000/doctors\")\r\n      .then((res) => {\r\n        dispatch(getDoctorSuccess(res.data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(getDoctorFailure());\r\n      });\r\n  };\r\n};\r\n\r\nexport const getClickedDoctorRequest = () => ({\r\n  type: GET_CLICKED_DOCTOR_REQ,\r\n});\r\nexport const getClickedDoctorSuccess = (payload) => {\r\n  // console.log(payload.data);\r\n  return {\r\n    type: GET_CLICKED_DOCTOR_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\nexport const getClickedDOCTORFailure = () => ({\r\n  type: GET_DOCTOR_FAILURE,\r\n});\r\n\r\nexport const getClickedDOCTORData = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(getClickedDOCTORRequest());\r\n    axios\r\n      .get(`http://localhost:3000/doctors/${id}`)\r\n      .then((res) => {\r\n        dispatch(getClickedDOCTORSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        dispatch(getClickedDOCTORFailure());\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}